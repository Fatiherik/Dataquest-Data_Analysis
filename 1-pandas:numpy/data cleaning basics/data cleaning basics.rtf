— import pandas as pd
laptops=pd.read_csv('laptops.csv', encoding='Latin-1')	            encoding default deger UTF-8, encoding yazmadan pd.read_csv yapinca encoding hatasi verirse baska encodinglerle denemek lazım.
laptops.info()                                                                 

—new_columns=[]
for i in laptops.columns:
    new_columns.append(i.strip())
    
laptops.columns=new_columns                          sutun isimlerinin başındaki ve sonundaki boşluklardan kutulduk ve yeniden verinin basliklarina atadık.

—import pandas as pd
laptops = pd.read_csv('laptops.csv', encoding='Latin-1')

def clean_col(col_name):
    col_name=col_name.strip()
    col_name=col_name.replace('Operating System','os')
    col_name=col_name.replace(' ','_')                                                 once sutun isimlerini istedigimiz formata ceviren fonk yazdik
    col_name=col_name.replace('(','')
    col_name=col_name.replace(')','')
    col_name=col_name.lower()
    return col_name

new_columns=[]
for i in laptops.columns:
    clean_i=clean_col(i)                                                                          Eski kolonie isimlerine bu fonksiyonu uygulayarak istediğimiz formata cevirdik
    new_columns.append(clean_i)
    
laptops.columns=new_columns						                      yeni sutun isimlerini dataya atadık

— unique_ram=laptops['ram'].unique()
type_data=laptops['ram'].dtype 						 bir sutunu incelerken ilk bakacagimiz seyler. Unique ve dtype/ bir sutunun yani serinin type icin ‘dtype’ kullanıyoruz, butun verinin yani dataframe type icin ‘dtypes’ kullanıyoruz.

—laptops['ram']=laptops['ram'].str.replace('GB','').astype(int)
unique_ram=laptops['ram'].unique()					          ram sutunundaki GB ifadelerinden kurtulduk ve type int yaptık, boylece hepsi numeric oldu, artik sıralama yapabileceğiz. str.replace kullandigimiza dikkat et!!!!!!

—laptops["ram"] = laptops["ram"].str.replace('GB','').astype(int)
laptops.rename({'ram':'ram_gb'}, axis=1, inplace=True)	             axis=1 diyerek sutundaki bir basligi değiştirmek istediğimizi söylüyoruz.    Eğer üstüne satırdaki astype=int yazmazsak gb_ram sutunun type object kalır ve describe 
ram_gb_desc=laptops['ram_gb'].describe()                                     sonucu farkli çıkar -eğer bir sutunda string ifade varsa type object olur- object ile int describe sonuçları farklı cikiyor, dikkat et!!!!!!

— laptops["gpu_manufacturer"] = (laptops["gpu"]
                                       .str.split()
                                       .str[0])
laptops["cpu_manufacturer"] = (laptops["cpu"]			                            cpu ve gpu satirlarinda üretici firma isimleri ile kodu yazıyordu sadece üretici firma isimlerini almak icin split edip en bastaki elemanı aldık.
                                       .str.split()
                                       .str[0])
cpu_manufacturer_counts=laptops["cpu_manufacturer"].value_counts()

— mapping_dict = {
    'Android': 'Android',
    'Chrome OS': 'Chrome OS',
    'Linux': 'Linux',
    'Mac OS': 'macOS',
    'No OS': 'No OS',
    'Windows': 'Windows',
    'macOS': 'macOS'
}
laptops['os']=laptops['os'].map(mapping_dict)			                   os kolonunda hem Mac OS hem de Mac OS vardi bunu duzeltmek icin bu sözlüğü kullandık


— laptops.isnull().sum()							                her kolondaki ayrı ayrı null toplamını veriyor

— laptops_no_null_rows=laptops.dropna(axis=0)		              verideki bos hucre iceren satirlari siler
laptops_no_null_cols=laptops.dropna(axis=1)                             verideki bos hucre iceren sutunlari siler

— laptops["os_version"].value_counts(dropna=False)

— value_counts_before = laptops.loc[laptops["os_version"].isnull(), "os"].value_counts()
laptops.loc[laptops["os"] == "macOS", "os_version"] = "X"
laptops.loc[laptops["os"] == "No OS", "os_version"] = "Version Unknown"
value_counts_after = laptops.loc[laptops["os_version"].isnull(), "os"].value_counts()

—laptops["weight"] = laptops["weight"].str.replace("kgs","").str.replace("kg","").astype(float)                   weight sutunundaki kgs ve kg leri sildik ve type float yaptık boylece hepsi numeric oldu.
laptops.rename({"weight": "weight_kg"}, axis=1, inplace=True)                                                                 sutun ismini degitirdik 
laptops.to_csv('laptops_cleaned.csv',index=False)		                                                                            yen datayi cvs olarak kaydettik











