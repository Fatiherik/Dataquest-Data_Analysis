{\rtf1\ansi\ansicpg1252\cocoartf2511
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\paperw11900\paperh16840\margl1440\margr1440\vieww28600\viewh18000\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs28 \cf0 \'97 import pandas as pd\
hn=pd.read_csv('hacker_news.csv')\
\
\'97 import re\
\
titles = hn["title"].tolist()\
python_mentions = 0\
pattern = "[Pp]ython"\
\
for s in titles:\
    if re.search(pattern, s):\
        python_mentions += 1\
\
print(python_mentions)\
\
\'97 pattern = '[Pp]ython'\
titles=hn['title']\
python_mentions=titles.str.contains(pattern).sum()		yukaridaki kod ile ayni seyi yap\uc0\u305 yor\
\
\'97 titles = hn['title']\
ruby_titles=titles[titles.str.contains('[Rr]uby')] 		sadece icinde ruby gecen sat\uc0\u305 rlari aliyor\
\
\'97email_bool = titles.str.contains("e-?mail")		icinde e-mail ya da email olup olmadigina bak\uc0\u305 yor, true false diye bir liste donduruyor\
email_count = email_bool.sum()				true olanlar\uc0\u305  say\u305 yor \
email_titles = titles[email_bool]					true olanlar\uc0\u305  g\'f6steriyor\
\
\'97 pattern='\\[\\w+\\]'							koseli parantezin regex te Ayri bir anlam\uc0\u305  oldu\u287 unu icin kacis dizisi olarak \\ kulland\u305 k, aradigimiz \u351 ey [pdf] gibi bi\u351 ey yani koseli parantez ve harflerden olusan birsey.\
tag_titles=titles[titles.str.contains(pattern)]\
tag_count=tag_titles.shape[0]\
\
\'97 pattern = r"\\[(\\w+)\\]"					aradigimiz say [pdf], [video] gibi koseli parantezli kelimler ancak g\'f6sterirken koseli par g\'f6stermek istemiyoruz, bunun icin () kulland\uc0\u305 k.\
tag_freq=titles.str.extract(pattern).value_counts()\
\
\'97 def first_10_matches(pattern):\
    """\
    Return the first 10 story titles that match\
    the provided regular expression\
    """\
    all_matches = titles[titles.str.contains(pattern)]\
    return all_matches\
\
java_titles= first_10_matches(r"[Jj]ava[^Ss]")			java kelimesinden sonra S veya s harfleri gelmeyecek\
\
\'97 def first_10_matches(pattern):\
    """\
    Return the first 10 story titles that match\
    the provided regular expression\
    """\
    all_matches = titles[titles.str.contains(pattern)]\
    return all_matches\
\
java_titles= first_10_matches(r"\\b[Jj]ava\\b")			java kelimesine \\b ile sinir koyduk, java kelimesini al\uc0\u305 yor ama javascript\
\
\'97 pattern=r'^\\[\\w+\\]'								^   cumleye [pdf] ile baslayanlar\
beginning_count=titles.str.contains(pattern).sum()		\
pattern2=r'\\[\\w+\\]$'								$   cumle [pdf] ile bitenler\
ending_count=titles.str.contains(pattern2).sum()\
\
\'97 import re\
\
email_tests = pd.Series(['email', 'Email', 'e Mail', 'e mail', 'E-mail',\
              'e-mail', 'eMail', 'E-Mail', 'EMAIL', 'emails', 'Emails',\
              'E-Mails'])\
pattern = r"\\be[\\-\\s]?mails?\\b"\
email_mentions = email_test.str.contains(pattern, flags=re.I).sum()          flags=re.I case sensitive olmas\uc0\u305 n\u305  engelliyor\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
}