{\rtf1\ansi\ansicpg1252\cocoartf2511
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;\f1\froman\fcharset0 Times-Roman;\f2\fnil\fcharset0 Menlo-Regular;
}
{\colortbl;\red255\green255\blue255;\red41\green46\blue57;\red255\green255\blue255;\red183\green13\blue60;
\red247\green237\blue240;\red47\green196\blue135;}
{\*\expandedcolortbl;;\cssrgb\c21176\c23922\c28627;\cssrgb\c100000\c100000\c100000;\cssrgb\c77647\c14118\c30196;
\cssrgb\c97647\c94510\c95294;\cssrgb\c20000\c80000\c60000;}
\paperw11900\paperh16840\margl1440\margr1440\vieww28600\viewh18000\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs28 \cf0 \'97 import json\
\
world_cup_str = """\
[\
    \{\
        "team_1": "France",\
        "team_2": "Croatia",\
        "game_type": "Final",\
        "score" : [4, 2]\
    \},\
    \{\
        "team_1": "Belgium",\
        "team_2": "England",\
        "game_type": "3rd/4th Playoff",\
        "score" : [2, 0]\
    \}\
]\
"""\
world_cup_obj=json.loads(world_cup_str)  			\
\
\'97file = open("hn_2014.json")					string den data indirmek icin json.loads, file dan data indirmek icin json.load kullan\uc0\u305 l\u305 yor\
hn = json.load(file)\
\
\'97def del_key(dict_, key):\
    # create a copy so we don't\
    # modify the original dict\
    modified_dict = dict_.copy()\
    del modified_dict[key]\
    return modified_dict\
\
hn_clean=[ ]\
for i in hn:\
    i=del_key(i,'createdAtI')\
    hn_clean.append(i)\
\
\'97hn_clean =[del_key(d, 'createdAtI') for d in hn]		                               list comprehension yontemi ile\
\
\'97  urls=[i['url'] for i in hn_clean] 			hn_clean icindeki herbir dictionary den url leri cektik\
\
\'97thousand_points=[d for d in hn_clean if d['points'] > 1000]                hn_clean icindeki herbir dictionary den 1000 puani a\uc0\u351 anlar\u305  sayd\u305 rd\u305 k        \
num_thousand_points=len(thousand_points)\
\
\'97def get_num_comments(json_dict):\
    return json_dict['numComments']\
\
most_comments=max(hn_clean, key=get_num_comments)                 hn_clean icindeki max commente sahip dictionary aldik\
\
\'97 # def multiply(a, b):\
#    return a * b\
\
multiply=lambda a,b:a*b			yukaridakinin lambda hali\
\
\'97hn_sorted_points=sorted(hn_clean, key=lambda d:d['points'], reverse=True)\
top_5_titles=[d['title'] for d in hn_sorted_points[:5]]\
\
\'97
\f1 \cf2 \cb3 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Pandas has the\'a0{\field{\*\fldinst{HYPERLINK "http://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.read_json.html"}}{\fldrslt 
\f2\fs23\fsmilli11900 \cf4 \cb5 \strokec4 pandas.read_json()
\f1\fs28 \cf6 \cb3 \strokec6 \'a0function}}, which is designed to read JSON from either a file or a JSON string.\'a0
\f0 \cf0 \cb1 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 \
\
\'97 import pandas as pd\
hn_df=pd.DataFrame(hn_clean)\
\
\
\'97 tags = hn_df['tags']\
tags_four = tags.apply(len)==4\
four_tags=tags[tags_four]\
\
\'97 cleaned_tags=tags.apply(lambda l:l[-1] if len(l) == 4 else None)\
hn_df['tags']=cleaned_tags\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
}