— mapping = {'Economy (GDP per Capita)': 'Economy', 'Health (Life Expectancy)': 'Health', 'Trust (Government Corruption)': 'Trust' }
happiness2015=happiness2015.rename(mapping,axis=1)

—def label(element):
    if element > 1:
        return 'High'
    else:
        return 'Low'
    
economy_impact_map=happiness2015['Economy'].map(label)                       map ve apply ayni isi yapti
economy_impact_apply=happiness2015['Economy'].apply(label)
equal=economy_impact_map.equals(economy_impact_apply)

— def label(element,x):
    if element > x:
        return 'High'
    else:
        return 'Low'
economy_impact_apply = happiness2015['Economy'].apply(label,x= .8)          map ile uygulayinca hata aldik cunku x diye ikinci bir parametre ekledik

— def label(element):
    if element > 1:
        return 'High'
    else:
        return 'Low'
economy_apply = happiness2015['Economy'].apply(label)
factors = ['Economy', 'Family', 'Health', 'Freedom', 'Trust', 'Generosity']
factors_impact=happiness2015[factors].applymap(label)                            applymap ile birden fazla kolona müdahale debildik. Applymap dataframe uygulanıyor series degil

— def v_counts(col):
    num = col.value_counts()
    den = col.size
    return num/den
v_counts_pct = factors_impact.apply(v_counts)

—factors = ['Economy', 'Family', 'Health', 'Freedom', 'Trust', 'Generosity', 'Dystopia Residual']
def percentages(col):
    div=col/happiness2015['Happiness Score']
    return 100*div
factor_percentages=happiness2015[factors].apply(percentages)

—main_cols = ['Country', 'Region', 'Happiness Rank', 'Happiness Score']
factors = ['Economy', 'Family', 'Health', 'Freedom', 'Trust', 'Generosity', 'Dystopia Residual']
melt=pd.melt(happiness2015, id_vars=main_cols, value_vars=factors)                                   melt fonksiyonu ile sutunlari ülkelerin satiri haline getirdik
melt['Percentage']=(100*melt['value']/melt['Happiness Score']).round(2)

— melt = pd.melt(happiness2015, id_vars = ['Country', 'Region', 'Happiness Rank', 'Happiness Score'], value_vars= ['Economy', 'Family', 'Health', 'Freedom', 'Trust', 'Generosity', 'Dystopia Residual'])
melt['Percentage'] = round(melt['value']/melt['Happiness Score'] * 100, 2)
pv_melt=melt.pivot_table(index='variable', values='value')                                        pivot table yapinca  6 satir variable ve karsisinda value olarak her ulkenin o variable degerlerinin ortalamasi var.
pv_melt.plot(kind='pie', y='value', legend=False)
