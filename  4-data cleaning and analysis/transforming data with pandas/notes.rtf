{\rtf1\ansi\ansicpg1252\cocoartf2511
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\paperw11900\paperh16840\margl1440\margr1440\vieww28600\viewh18000\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs28 \cf0 \'97 mapping = \{'Economy (GDP per Capita)': 'Economy', 'Health (Life Expectancy)': 'Health', 'Trust (Government Corruption)': 'Trust' \}\
happiness2015=happiness2015.rename(mapping,axis=1)\
\
\'97def label(element):\
    if element > 1:\
        return 'High'\
    else:\
        return 'Low'\
    \
economy_impact_map=happiness2015['Economy'].map(label)                       map ve apply ayni isi yapti\
economy_impact_apply=happiness2015['Economy'].apply(label)\
equal=economy_impact_map.equals(economy_impact_apply)\
\
\'97 def label(element,x):\
    if element > x:\
        return 'High'\
    else:\
        return 'Low'\
economy_impact_apply = happiness2015['Economy'].apply(label,x= .8)          map ile uygulayinca hata aldik cunku x diye ikinci bir parametre ekledik\
\
\'97 def label(element):\
    if element > 1:\
        return 'High'\
    else:\
        return 'Low'\
economy_apply = happiness2015['Economy'].apply(label)\
factors = ['Economy', 'Family', 'Health', 'Freedom', 'Trust', 'Generosity']\
factors_impact=happiness2015[factors].applymap(label)                            applymap ile birden fazla kolona m\'fcdahale debildik. Applymap dataframe uygulan\uc0\u305 yor series degil\
\
\'97 def v_counts(col):\
    num = col.value_counts()\
    den = col.size\
    return num/den\
v_counts_pct = factors_impact.apply(v_counts)\
\
\'97factors = ['Economy', 'Family', 'Health', 'Freedom', 'Trust', 'Generosity', 'Dystopia Residual']\
def percentages(col):\
    div=col/happiness2015['Happiness Score']\
    return 100*div\
factor_percentages=happiness2015[factors].apply(percentages)\
\
\'97main_cols = ['Country', 'Region', 'Happiness Rank', 'Happiness Score']\
factors = ['Economy', 'Family', 'Health', 'Freedom', 'Trust', 'Generosity', 'Dystopia Residual']\
melt=pd.melt(happiness2015, id_vars=main_cols, value_vars=factors)                                   melt fonksiyonu ile sutunlari \'fclkelerin satiri haline getirdik\
melt['Percentage']=(100*melt['value']/melt['Happiness Score']).round(2)\
\
\'97 melt = pd.melt(happiness2015, id_vars = ['Country', 'Region', 'Happiness Rank', 'Happiness Score'], value_vars= ['Economy', 'Family', 'Health', 'Freedom', 'Trust', 'Generosity', 'Dystopia Residual'])\
melt['Percentage'] = round(melt['value']/melt['Happiness Score'] * 100, 2)\
pv_melt=melt.pivot_table(index='variable', values='value')                                        pivot table yapinca  6 satir variable ve karsisinda value olarak her ulkenin o variable degerlerinin ortalamasi var.\
pv_melt.plot(kind='pie', y='value', legend=False)}